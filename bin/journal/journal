#!/bin/bash
# author: kevinkirst
set -uo pipefail
	# 'set [+-]e' -> exits if any command has a non zero exit status
	# 'set [+-]u' -> exits if an undefined variable is referenced 
		# requires ':-' to be placed after unbound variables ('${1}' becomes '${1:-}')
	# 'set [+-]o pipefail' -> prevents error in a pipeline from being masked
IFS=$'\n\t'
	# Internal Field Separator -> set to 'new line' and 'tab'

# =-= OBJECTIVE =-=
# script that copies a base file to a file prefixed by date using the yyyymmdd_journal.osd mask
# keeps folder structure organized inside configurable $JOURNAL_HOME folder

# =-= VARIABLES =-=
# TODAY=yyyyddmm
TODAY=$(date +"%F" | tr -d '-')
# MONTH=01 - January
MONTH="$(date +"%m")_$(date +"%B")"
# YEAR=yyyy
YEAR=$(date +"%Y")
# FOLDERS/FILES
# /journaling folder
JOURNAL_HOME="/home/${USER}/Documents/journaling"
YEAR_FOLDER=${JOURNAL_HOME}/${YEAR}
MONTH_FOLDER=${YEAR_FOLDER}/${MONTH}
# base journal file
BASE_JOURNAL=${JOURNAL_HOME}/base_journal.odt
TODAY_JOURNAL=${MONTH_FOLDER}/${TODAY}_journal.odt

# =-= FUNCTIONS =-=


# =-= START =-=
# check if /journaling folder exists
if [[ ! -d "${JOURNAL_HOME}" ]]; then
	echo "journal: ERROR"
	echo "directory: $JOURNAL_HOME not found"
	exit 1
fi
#cd to it
cd $JOURNAL_HOME
# check if the base journal file exists
if [[ ! -f "${BASE_JOURNAL}" ]]; then
	echo "journal: ERROR"
	echo "file: $BASE_JOURNAL not found"
	exit 1
fi
# checking if $YEAR_FOLDER exists
if [[ ! -d "${YEAR_FOLDER}" ]]; then
	mkdir ${YEAR_FOLDER}
fi
# checking if $MONTH_FOLDER exists
if [[ ! -d "${MONTH_FOLDER}" ]]; then
	mkdir ${MONTH_FOLDER}
fi
# checking if $TODAY_JOURNAL exists
if [[ -f "${TODAY_JOURNAL}" ]]; then
	libreoffice --writer ${TODAY_JOURNAL}
else
	cp ${BASE_JOURNAL} ${TODAY_JOURNAL}
	libreoffice --writer ${TODAY_JOURNAL}
fi
