#!/bin/bash
set -uo pipefail
	# 'set [+-]e' -> exits if any command has a non zero exit status
	# 'set [+-]u' -> exits if an undefined variable is referenced 
		# requires ':-' to be placed after unbound variables ('${1}' becomes '${1:-}')
	# 'set [+-]o pipefail' -> prevents error in a pipeline from being masked
IFS=$'\n\t'
	# Internal Field Separator -> set to 'new line' and 'tab'

# changelog
#	v1.0 - main file used in configuring a new ubuntu install
#		 - checks if inside /etc/new_install, if not cd to it
#		 - sources 'config.cfg', 'licencing.cfg'
#		 - creates /var/log/new_install with /ok and /error subfolders
#		 - checks if script is being executed as root
#		 - 

# =-= INITIAL CHECKS =-= #
# check if running as root, if not, prompts for root password
if [[ ${EUID} -ne 0 ]]
	then
		exec sudo -- "$0" "$@"
fi
# if current directory isn't '/etc/new_install' cd to it
if [[ ! "$PWD" = "/etc/new_install" ]]; then
	cd "/etc/new_install"
fi

# =-= VARIABLES =-= #
# check if config.cfg exists before importing it
if [[ ! -e "./lib/config.cfg" ]]; then
	echo "new_install: config.cfg not found."
	exit 1
fi
source ./lib/config.cfg

# =-= FUNCTIONS =-= #
function finish {
	#clean-up code goes here
	exit 0
}

# =-= MAIN =-= #
trap finish exit
# vVv main script code vVv
# check if licensing.cfg exists before importing it
if [[ ! -e "./lib/licensing.cfg" ]]; then
	echo "new_install: licensing.cfg not found."
	exit 1
fi
echo "new_install: for use in new Ubuntu installations. Configures the machine
with my desired customizations and programs.
"
source ./lib/licensing.cfg # copyright statement
source $DIR_SYSTEM/update.sh
source $DIR_SYSTEM/upgrade.sh

# =-= TESTING ZONE =-= #
echo
echo "$DASH"
echo "# =-= TESTING ZONE =-= #"
set +u
source $DIR_PROGRAMS/curl.install
set -u

# mkdir for these guys:
# DIR_LOG_OK="/var/log/new_install/ok/"
# DIR_LOG_ERROR="/var/log/new_install/error/"

# update system before installing programs and in between installations
