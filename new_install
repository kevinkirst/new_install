#!/bin/bash
set -uo pipefail
	# 'set [+-]e' -> exits if any command has a non zero exit status
	# 'set [+-]u' -> exits if an undefined variable is referenced 
		# requires ':-' to be placed after unbound variables ('${1}' becomes '${1:-}')
	# 'set [+-]o pipefail' -> prevents error in a pipeline from being masked
IFS=$'\n\t'
	# Internal Field Separator -> set to 'new line' and 'tab'

# changelog
#	v1.0 - main file used in configuring a new ubuntu install
#		 - checks if inside /etc/new_install, if not cd to it
#		 - sources 'config.cfg', 'licencing.cfg'
#		 - creates /var/log/new_install with /ok and /error subfolders
#		 - checks if script is being executed as root
#		 - updates system before installing packages and in between each package installation
#		 - 

# =-= INITIAL CHECKS =-= #
# check if running as root, if not, prompts for root password
if [[ ${EUID} -ne 0 ]]
	then
		exec sudo -- "$0" "$@"
fi

# =-= VARIABLES =-= #
# check if config.cfg exists before importing it
if [[ ! -e "./lib/config.cfg" ]]; then
	echo "new_install: config.cfg not found.
	Please 'cd' into the bundle folder before running this script."
	exit 1
fi
source ./lib/config.cfg
echo -e "${CLR_GREEN}${NAME}: config.cfg found.${CLR_DEFAULT}"

# =-= FUNCTIONS =-= #
function finish {
	# clean-up code goes here
	# deletting temp file(s)
	rm -r /tmp/${NAME}-*
	exit 0
}

# =-= MAIN =-= #
trap finish exit
# vVv main script code vVv
# check if licensing.cfg exists before importing it
if [[ ! -e "./lib/licensing.cfg" ]]; then
	echo -e "${CLR_RED}${NAME}: licensing.cfg not found.${CLR_DEFAULT}"
	exit 1
fi
echo "${NAME}: for use in new Debian based Linux installations. Configures
the machine with my desired customizations and programs.
"

source ./lib/licensing.cfg # copyright statement
source "$DIR_SYSTEM"/mkdir.sh
source "$DIR_SYSTEM"/update.sh
source "$DIR_SYSTEM"/upgrade.sh
echo
# installing packages
cd "$DIR_PROGRAMS"
shopt -s extglob #enable extended globbing
# cycle through all '.install' files inside './programs'
for dir in !(*.sh|*.gpg|template.install); do
	source "${dir}"
	# update and upgrade in between each package installation
	source "$DIR_SYSTEM"/update.sh
	source "$DIR_SYSTEM"/upgrade.sh
	echo
done
shopt -u extglob #disable extended globbing
cd "$DIR_HOME"

# =-= TESTING ZONE =-= #
echo "$DASH"
echo "# =-= TESTING ZONE =-= #"
set +u

set -u


# create crontabs

# chmod +x to everyone how?

# do something with ~/.bash_profile and ~/.bashrc ??